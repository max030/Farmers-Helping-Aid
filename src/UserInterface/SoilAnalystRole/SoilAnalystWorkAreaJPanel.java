/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SoilAnalystRole;

import Business.EcoSystem;
import Business.Enterprises.Enterprise;
import Business.Organization.Organization;
import Business.Organization.SoilAnalystOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SoilAnalysisWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ishita
 */
public class SoilAnalystWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SoilAnalystWorkAreaJPanel
     */
    private JPanel userProcessContainer;
   private EcoSystem business;
  private UserAccount account;
   private SoilAnalystOrganization soilOrganization;
  private  Enterprise enterprise;
   
   
   
   
    public SoilAnalystWorkAreaJPanel(JPanel userProcessContainer, UserAccount account,Organization organization, Enterprise enterprise, EcoSystem business ) {
        initComponents();
         this.userProcessContainer=userProcessContainer;
        this.business=business;
        this.account = account;
        this.soilOrganization = (SoilAnalystOrganization)organization;
        this.enterprise=enterprise;
        this.business=business;
        populateRequestTable();
    }
    
  
  public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) soilWorkRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : soilOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request.getMessage();
            row[1] = request.getSender();
            row[2] = request.getReceiver();
            SoilAnalysisWorkRequest result = ((SoilAnalysisWorkRequest) request);
            
            row[3] = result;
            
            model.addRow(row);
        }
}
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        soilWorkRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();

        jLabel1.setText("Soil Analyst Work Area: ");

        soilWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(soilWorkRequestJTable);

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 101, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(assignJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(processJButton)
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignJButton)
                    .addComponent(processJButton))
                .addGap(40, 40, 40))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed
        try{
                int selectedRow = soilWorkRequestJTable.getSelectedRow();
        
                if (selectedRow < 0){
                        return;
                    }
                SoilAnalysisWorkRequest  request = (SoilAnalysisWorkRequest)soilWorkRequestJTable.getValueAt(selectedRow, 3);
                request.setReceiver(account);
                request.setStatus("Pending");
                populateRequestTable();
        }
        catch(Exception ex){
            System.out.println(ex);
            
        }
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = soilWorkRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }
                SoilAnalysisWorkRequest request = (SoilAnalysisWorkRequest)soilWorkRequestJTable.getValueAt(selectedRow, 3);
                request.setStatus("Processing");
                ProcessRequestSoilJPanel processRequestSoilJPanel = new ProcessRequestSoilJPanel(userProcessContainer, account,(SoilAnalysisWorkRequest)request);
                userProcessContainer.add("processWorkRequestJPanel", processRequestSoilJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
    }//GEN-LAST:event_processJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JTable soilWorkRequestJTable;
    // End of variables declaration//GEN-END:variables
}
